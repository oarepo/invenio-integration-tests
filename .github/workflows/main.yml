# -*- coding: utf-8 -*-
#
# Copyright (C) 2023 CESNET.
#
# invenio-integration-tests is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

name: Oarepo integr.test builder

on:
  push:
    branches: [ rdm-11 ]
#    paths-ignore: [ 'upload/*', '.github/workflows/p2oarepo.yml', '.github/workflows/main.yml' ]
    paths: [ 'upload/main_action.trigger' ]
  workflow_dispatch:

jobs:
  start_and_test:
    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 1
#      matrix:
#        opensearch-version: [ 2 ]
#        redis-version: [ '6' ]
#        postgres-version: [ 14 ]
    env:
      OPENSEARCH_PORT: 9200
#      OPENSEARCH_VERSION: ${{ matrix.opensearch-version }}
#      REDIS_VERSION: ${{ matrix.redis-version }}
#      POSTGRES_VERSION: ${{ matrix.postgres-version }}
#      PYTHON_VERSION: ${{ matrix.python-version }}
      OPENSEARCH_VERSION: 2
      REDIS_VERSION: 6
      POSTGRES_VERSION: 14
      PYTHON_VERSION: 3.9
      INVENIO_SQLALCHEMY_DATABASE_URI: 'postgresql+psycopg2://localhost:5432/invenio'
      POSTGRES_DB: invenio
    steps:
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Opensearch ${{ env.OPENSEARCH_VERSION }}
        uses: ankane/setup-opensearch@v1
        with:
          opensearch-version: ${{ env.OPENSEARCH_VERSION }}
      - name: Redis ${{ env.REDIS_VERSION }}
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ${{ env.REDIS_VERSION }}
      - name: Postgres ${{ env.POSTGRES_VERSION }}
        uses: ankane/setup-postgres@v1
        with:
          postgres-version: ${{ env.POSTGRES_VERSION }}
          database: ${{ env.POSTGRES_DB }}

      - name: Test opensearch on port ${{ env.OPENSEARCH_PORT }}
        run: |
          netstat -ntlp
          curl -s http://localhost:${{ env.OPENSEARCH_PORT }}
      - name: "Test redis: redis-cli ping"
        run: |
          redis-cli ping
      - name: Test postgres version ${{ env.POSTGRES_VERSION }}
        run: |
          psql -d ${{ env.POSTGRES_DB }} -c 'SHOW server_version'

      - name: Set up Node16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Checkout oarepo/invenio-integration-tests
        uses: actions/checkout@v3
      - name: virtualenv
        run: |
          pwd
          ls -la
          python3 -m venv .venv
          . .venv/bin/activate
          pip install -U setuptools pip wheel bump
          node --version
          python --version
          pip --version

      - name: Checkout inveniosoftware/invenio-app-rdm under ./app-rdm
        uses: actions/checkout@v3
        with:
          repository: 'inveniosoftware/invenio-app-rdm'
          ref: 'maint-11.x'
          path: 'app-rdm'
      - name: invenio-app-rdm test
        run: |
          . .venv/bin/activate
          cd app-rdm
          pwd
          ls -la
          /bin/echo -e "\n=== build invenio-app-rdm: ==="
          python setup.py bdist_wheel
          ls -la
          /bin/echo -e "\n=== requires: ==="
          grep -v invenio-rdm-records invenio_app_rdm.egg-info/requires.txt

      - name: Checkout inveniosoftware/invenio-rdm-records under ./rdm-records
        uses: actions/checkout@v3
        with:
          repository: 'inveniosoftware/invenio-rdm-records'
          ref: 'maint-1.3.x'
          path: 'rdm-records'
      - name: invenio-rdm-records test
        run: |
          . .venv/bin/activate
          cd rdm-records
          pwd
          ls -la
          /bin/echo -e "\n=== build invenio-rdm-records: ==="
          python setup.py bdist_wheel
          ls -la
          /bin/echo -e "\n=== requires: ==="
          cat invenio_rdm_records.egg-info/requires.txt

      - name: Checkout oarepo/oarepo under ./oarepo
        uses: actions/checkout@v3
        with:
          repository: 'oarepo/oarepo'
          ref: 'rdm-11'
          path: 'oarepo'
      - name: oarepo test
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          cd oarepo
          pwd
          ls -la
          /bin/echo -e "\n=== ls -la .. ==="
          ls -la ..
          /bin/echo -e "\n=== original oarepo version: ==="
          grep '__version__' oarepo/version.py
          /bin/echo -e "\n=== BUMP: ==="
          bump oarepo/version.py oarepo/version.py
          grep '__version__' oarepo/version.py

          /bin/echo -e "\n=== grab reqs from invenio_app_rdm: ==="
          ls -l ../app-rdm/invenio_app_rdm.egg-info/requires.txt
          grep -v invenio-rdm-records ../app-rdm/invenio_app_rdm.egg-info/requires.txt | sed -n '1,/^$/ { s/^/    /;p; }' > reqs-app-rdm.txt
          cat reqs-app-rdm.txt

          /bin/echo -e "\n=== grab reqs from invenio-rdm-records: ==="
          ls -l ../rdm-records/invenio_rdm_records.egg-info/requires.txt
          cat ../rdm-records/invenio_rdm_records.egg-info/requires.txt | sed -n '1,/^$/ { s/^/    /;p; }' > reqs-rdm-records.txt
          cat reqs-rdm-records.txt

          /bin/echo -e "\n=== generate setup.cfg: ==="
          ls -l ../oarepo_setup.cfg.template
          cat reqs-app-rdm.txt reqs-rdm-records.txt | sed -e '/\$install_requires/ r /dev/stdin' -e '/\$install_requires/ d' ../oarepo_setup.cfg.template > setup.cfg
          cat setup.cfg
          /bin/echo -e "\n=== new setup.py: ==="
          ls -l ../oarepo_setup.py
          mv setup.py setup.py.orig
          cp ../oarepo_setup.py setup.py
          cat setup.py
          /bin/echo -e "\n=== pip install oarepo: ==="
          pwd
          pip install .[opensearch2,s3]

      - name: simple_repo
        run: |
          cd simple_repo
          ls -la
          /bin/echo -e "\n=== pip install simple_repo: ==="
          pwd
          pip install -e .

      - name: prepare invenio
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          /bin/echo -e "\nINVENIO_INSTANCE_PATH: $INVENIO_INSTANCE_PATH"
          ls -l $INVENIO_INSTANCE_PATH
          cat $INVENIO_INSTANCE_PATH/invenio.cfg
          ls -l $INVENIO_INSTANCE_PATH/../simple_repo/assets/semantic-ui/less
          /bin/echo -e "\nSQLALCHEMY_DATABASE_URI: $SQLALCHEMY_DATABASE_URI\nINVENIO_SQLALCHEMY_DATABASE_URI: $INVENIO_SQLALCHEMY_DATABASE_URI"
          /bin/echo -e "\n=== invenio db init: ==="
          invenio db init
          /bin/echo -e "\n=== invenio db create: ==="
          invenio db create
          /bin/echo -e "\n=== invenio index init: ==="
          invenio index init
          /bin/echo -e "\n=== invenio webpack buildall: ==="
          invenio webpack buildall
          /bin/echo -e "\n=== invenio users create: ==="
          invenio users create --password aaaaaa -a -c test@test.com

      - name: test REST
        env:
          REST_URL: https://127.0.0.1:5000/api/simple-records
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          /bin/echo -e "\n=== invenio tokens create: ==="
          TOKEN=$(invenio tokens create -n test -u test@test.com)
          /bin/echo -e "status: $?\n$TOKEN"
          /bin/echo -e "\n=== invenio run: ==="
          invenio run --cert ./simple_repo/test.crt --key ./simple_repo/test.key > invenio_run.log 2>&1 &
          INVEPID=$!
          trap "kill $INVEPID &>/dev/null; /bin/echo -e '\n=== invenio_run.log: ==='; cat invenio_run.log" EXIT
          /bin/echo "  PID: $INVEPID"
          sleep 8

          /bin/echo -e "\n=== REST 1: ==="
          RESULT=$(curl -sk -d '{"title":"blah"}' -X POST -H "content-type: application/json" "$REST_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]

          /bin/echo -e "\n=== REST 2: ==="
          RESULT=$(curl -sk -H "Authorization: Bearer $TOKEN" -d '{"title":"blah"}' -X POST -H "content-type: application/json" "$REST_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]
          RECORD_URL=$(jq -r '.links.self' <<<"$RESULT")
          /bin/echo -e "status: $?\nRECORD_URL: $RECORD_URL"

          /bin/echo -e "\n=== REST 3: ==="
          RESULT=$(curl -sk "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]

#  build:
#    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 1
#      matrix:
#        requirements: [ rdm-11, rdm-11-test]
#        python-version: [ 3.9 ]
#        db-service: [ postgresql13 ]
#        search-service: [ opensearch2 ]
#        include:
#          - extras: 'opensearch2,s3'
#            requirements: 'rdm-11'
#          - extras: 'opensearch2,s3,tests'
#            requirements: 'rdm-11-test'
#    env:
#      EXTRAS: ${{ matrix.extras }}
#      REQUIREMENTS: ${{ matrix.requirements }}
#      SEARCH: ${{ matrix.search-service }}
#      DB: ${{ matrix.db-service }}
#      TOK: '${{ secrets.INTEGRATION_TEST }}'
#      SQLALCHEMY_DATABASE_URI: 'postgresql+psycopg2://invenio:invenio@localhost:5432/invenio'
#      POSTGRES_USER: postgres
#      POSTGRES_HOST: localhost
#      POSTGRES_PORT: 5432
#      POSTGRES_DB: invenio
#    steps:
#      - name: Checkout oarepo/invenio-integration-tests
#        uses: actions/checkout@v3
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
