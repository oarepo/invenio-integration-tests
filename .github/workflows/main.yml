# -*- coding: utf-8 -*-
#
# Copyright (C) 2023 CESNET.
#
# invenio-integration-tests is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

name: Oarepo integr.test builder

on:
  workflow_dispatch:

jobs:
  start_and_test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
#          - db: postgres
#            invenio-sqlalchemy-database-uri: "postgresql+psycopg2://localhost:5432/invenio"
          - db: sqlite-path
            invenio-sqlalchemy-database-uri: "sqlite:////home/runner/work/invenio-integration-tests/invenio-integration-tests/test.db"
          - db: sqlite-tmp
            invenio-sqlalchemy-database-uri: "sqlite:////tmp/test.db"
          - db: sqlite-memory
            invenio-sqlalchemy-database-uri: "sqlite:///:memory:"
    env:
      OPENSEARCH_PORT: 9200
      OPENSEARCH_VERSION: 2
      REDIS_VERSION: 6
      POSTGRES_VERSION: 14
      PYTHON_VERSION: 3.9
      INVENIO_SQLALCHEMY_DATABASE_URI: ${{ matrix.invenio-sqlalchemy-database-uri }}
      POSTGRES_DB: invenio
    outputs:
      newtag: ${{ steps.oarepo-test.outputs.newtag }}
    steps:
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Opensearch ${{ env.OPENSEARCH_VERSION }}
        uses: ankane/setup-opensearch@v1
        with:
          opensearch-version: ${{ env.OPENSEARCH_VERSION }}
      - name: Redis ${{ env.REDIS_VERSION }}
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: ${{ env.REDIS_VERSION }}
      - name: Postgres ${{ env.POSTGRES_VERSION }}
        uses: ankane/setup-postgres@v1
        with:
          postgres-version: ${{ env.POSTGRES_VERSION }}
          database: ${{ env.POSTGRES_DB }}
        if: matrix.db == 'postgres'

      - name: Test opensearch on port ${{ env.OPENSEARCH_PORT }}
        run: |
          netstat -ntlp
          curl -s http://localhost:${{ env.OPENSEARCH_PORT }}
      - name: "Test redis: redis-cli ping"
        run: |
          redis-cli ping
      - name: Test postgres version ${{ env.POSTGRES_VERSION }}
        run: |
          psql -d ${{ env.POSTGRES_DB }} -c 'SHOW server_version'
        if: matrix.db == 'postgres'

      - name: Set up Node16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Checkout oarepo/invenio-integration-tests
        uses: actions/checkout@v3
      - name: virtualenv
        run: |
          pwd
          ls -la
          python3 -m venv .venv
          . .venv/bin/activate
          pip install -U setuptools pip wheel bump
          node --version
          python --version
          pip --version

      - name: Checkout inveniosoftware/invenio-app-rdm under ./app-rdm
        uses: actions/checkout@v3
        with:
          repository: "inveniosoftware/invenio-app-rdm"
          ref: "maint-11.x"
          path: "app-rdm"
      - name: invenio-app-rdm test
        run: |
          . .venv/bin/activate
          cd app-rdm
          pwd
          ls -la
          /bin/echo -e "\n=== build invenio-app-rdm: ==="
          python setup.py bdist_wheel
          ls -la
          /bin/echo -e "\n=== requires: ==="
          grep -v invenio-rdm-records invenio_app_rdm.egg-info/requires.txt

      - name: Checkout inveniosoftware/invenio-rdm-records under ./rdm-records
        uses: actions/checkout@v3
        with:
          repository: "inveniosoftware/invenio-rdm-records"
          ref: "maint-1.3.x"
          path: "rdm-records"
      - name: invenio-rdm-records test
        run: |
          . .venv/bin/activate
          cd rdm-records
          pwd
          ls -la
          /bin/echo -e "\n=== build invenio-rdm-records: ==="
          python setup.py bdist_wheel
          ls -la
          /bin/echo -e "\n=== requires: ==="
          cat invenio_rdm_records.egg-info/requires.txt

      - name: Checkout oarepo/oarepo under ./oarepo
        uses: actions/checkout@v3
        with:
          repository: "oarepo/oarepo"
          ref: "rdm-11"
          token: "${{ secrets.INTEGRATION_TEST }}"
          path: "oarepo"
      - name: oarepo test
        id: oarepo-test
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          cd oarepo
          pwd
          ls -la
          /bin/echo -e "\n=== ls -la .. ==="
          ls -la ..
          /bin/echo -e "\n=== original oarepo version: ==="
          grep '__version__' oarepo/version.py
          /bin/echo -e "\n=== BUMP: ==="
          NEWTAG=$(bump oarepo/version.py oarepo/version.py)
          echo "new version: $NEWTAG"
          echo "NEWTAG=$NEWTAG" >> "$GITHUB_ENV"
          echo "newtag=$NEWTAG" >> "$GITHUB_OUTPUT"
          grep '__version__' oarepo/version.py

          /bin/echo -e "\n=== grab reqs from invenio_app_rdm: ==="
          ls -l ../app-rdm/invenio_app_rdm.egg-info/requires.txt
          grep -v invenio-rdm-records ../app-rdm/invenio_app_rdm.egg-info/requires.txt | sed -n '1,/^$/ { s/^/    /;p; }' > reqs-app-rdm.txt
          cat reqs-app-rdm.txt

          /bin/echo -e "\n=== grab reqs from invenio-rdm-records: ==="
          ls -l ../rdm-records/invenio_rdm_records.egg-info/requires.txt
          cat ../rdm-records/invenio_rdm_records.egg-info/requires.txt | sed -n '1,/^$/ { s/^/    /;p; }' > reqs-rdm-records.txt
          cat reqs-rdm-records.txt

          /bin/echo -e "\n=== generate setup.cfg: ==="
          ls -l ../oarepo_setup.cfg.template
          #cat reqs-app-rdm.txt reqs-rdm-records.txt | sed -e '/\$install_requires/ r /dev/stdin' -e '/\$install_requires/ d' ../oarepo_setup.cfg.template > setup.cfg
          cat reqs-app-rdm.txt reqs-rdm-records.txt ../requirements-extra.txt | tee requirements.txt > requirements-tests.txt
          cp ../oarepo_setup.cfg.template setup.cfg
          cat setup.cfg
          /bin/echo -e "\n=== new setup.py: ==="
          ls -l ../oarepo_setup.py
          mv setup.py setup.py.orig
          cp ../oarepo_setup.py setup.py
          cat setup.py
          /bin/echo -e "\n=== pip install oarepo: ==="
          pwd
          pip install .[opensearch2,s3]
          /bin/echo -e "\n=== pip freeze: ==="
          pip freeze

      - name: simple_repo
        run: |
          . .venv/bin/activate
          cd simple_repo
          ls -la
          /bin/echo -e "\n=== pip install simple_repo: ==="
          pwd
          pip install -e .
          /bin/echo -e "\n=== pip freeze: ==="
          pip freeze

      - name: prepare invenio
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          /bin/echo -e "\nINVENIO_INSTANCE_PATH: $INVENIO_INSTANCE_PATH"
          /bin/echo -e "\nINVENIO_SQLALCHEMY_DATABASE_URI: $INVENIO_SQLALCHEMY_DATABASE_URI"
          /bin/echo -e "\n=== invenio db init: ==="
          invenio db init
          /bin/echo -e "\n=== invenio db create: ==="
          invenio db create
          /bin/echo -e "\n=== invenio index init: ==="
          invenio index init
          #/bin/echo -e "\n=== invenio webpack create: ==="
          #invenio webpack create
          #ls -lR $INVENIO_INSTANCE_PATH
          #/bin/echo -e "\n=== invenio webpack install: ==="
          #invenio webpack install
          #ls -lR $INVENIO_INSTANCE_PATH
          #cat $INVENIO_INSTANCE_PATH/assets/package.json
          /bin/echo -e "\n=== invenio webpack buildall: ==="
          invenio webpack buildall
          /bin/echo -e "\n=== invenio users create: ==="
          invenio users create --password aaaaaa -a -c test@test.com

      - name: test REST and pytest
        env:
          REST_URL: https://127.0.0.1:5000/api/simple-records
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          export SRVLOG=$PWD/invenio_run.log
          /bin/echo -e "\n=== invenio tokens create: ==="
          TOKEN=$(invenio tokens create -n test -u test@test.com)
          /bin/echo -e "status: $?\n$TOKEN"
          /bin/echo -e "\n=== invenio run: ==="
          invenio run --cert ./simple_repo/test.crt --key ./simple_repo/test.key > $SRVLOG 2>&1 &
          INVEPID=$!
          trap "kill $INVEPID &>/dev/null; /bin/echo -e '\n=== $SRVLOG: ==='; cat $SRVLOG" EXIT
          /bin/echo "  PID: $INVEPID"
          sleep 8

          /bin/echo -e "\n=== REST 1 (POST new record w/o token): ==="
          RESULT=$(curl -sk -d '{"title":"blah"}' -X POST -H "content-type: application/json" "$REST_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -eq 403 ]]

          /bin/echo -e "\n=== REST 2 (POST new record): ==="
          RESULT=$(curl -sk -H "Authorization: Bearer $TOKEN" -d '{"title":"blah"}' -X POST -H "content-type: application/json" "$REST_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]
          RECORD_URL=$(jq -r '.links.self' <<<"$RESULT")
          /bin/echo -e "status: $?\nRECORD_URL: $RECORD_URL"

          /bin/echo -e "\n=== REST 3 (GET record): ==="
          RESULT=$(curl -sk "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]

          /bin/echo -e "\n=== REST 4 (PUT new title w/o token): ==="
          RESULT=$(curl -sk -d '{"title":"blah 1"}' -X PUT -H "content-type: application/json" "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -eq 403 ]]

          /bin/echo -e "\n=== REST 5 (PUT new title): ==="
          RESULT=$(curl -sk -H "Authorization: Bearer $TOKEN" -d '{"title":"blah 1"}' -X PUT -H "content-type: application/json" "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]

          /bin/echo -e "\n=== REST 6 (GET records on /api/simple-records): ==="
          RESULT=$(curl -sk -X GET "$REST_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]

          /bin/echo -e "\n=== REST 7 (DELETE record w/o token): ==="
          RESULT=$(curl -sk -X DELETE "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -eq 403 ]]

          /bin/echo -e "\n=== REST 8 (DELETE record): ==="
          RESULT=$(curl -sk -H "Authorization: Bearer $TOKEN" -X DELETE "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 400 ]]

          /bin/echo -e "\n=== REST 9 (GET record): ==="
          RESULT=$(curl -sk "$RECORD_URL")
          /bin/echo -e "status: $?\n$RESULT"
          [[ $(jq '.status' <<<"$RESULT") -lt 500 ]]

      - name: Install test dependencies
        run: |
          cd ui_tests/
          pwd
          npm ci
          npm install mocha -g

      - name: run ui
        env:
          REST_URL: https://127.0.0.1:5000/api/simple-records
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          export SRVLOG=$PWD/invenio_run.log
          /bin/echo -e "\n=== invenio tokens create: ==="
          TOKEN=$(invenio tokens create -n test -u test@test.com)
          /bin/echo -e "status: $?\n$TOKEN"
          /bin/echo -e "\n=== invenio run: ==="
          invenio run --cert ./simple_repo/test.crt --key ./simple_repo/test.key > $SRVLOG 2>&1 &
          INVEPID=$!
          trap "kill $INVEPID &>/dev/null; /bin/echo -e '\n=== $SRVLOG: ==='; cat $SRVLOG" EXIT
          /bin/echo "  PID: $INVEPID"
          sleep 8

          cd ui_tests/test/
          pwd
          mocha invenioIntegrationTests.spec.js

          /bin/echo -e "\n=== invenio index destroy --yes-i-know: ==="
          invenio index destroy --yes-i-know
          /bin/echo -e "\n=== invenio db destroy --yes-i-know: ==="
          invenio db destroy --yes-i-know

      - name: pip freeze
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          /bin/echo -e "\n=== pip freeze: ==="
          pip freeze | tee oarepo/requirements.txt
          sed -i -f ./blacklisted_pkgs.sed oarepo/requirements.txt

      - name: pytest
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          cd simple_repo
          /bin/echo -e "\n=== simple_repo: pip install -e '.[tests]': ==="
          pip install -e '.[tests]'
          /bin/echo -e "\n=== pytest tests: ==="
          pytest tests

      - name: pip freeze (w. tests)
        run: |
          . .venv/bin/activate
          export INVENIO_INSTANCE_PATH=$PWD/simple_repo/instance
          /bin/echo -e "\n=== pip freeze: ==="
          pip freeze | tee oarepo/requirements-tests.txt
          sed -i -f ./blacklisted_pkgs.sed oarepo/requirements-tests.txt

      - name: debug
        run: |
          echo "ls -l oarepo :"
          ls -l oarepo
          echo "ls -l oarepo/oarepo :"
          ls -l oarepo/oarepo
          echo "ls -l .... :"
          ls -l oarepo/setup.py oarepo/setup.cfg oarepo/requirements.txt oarepo/requirements-tests.txt oarepo/oarepo/version.py
          echo -n "version:"
          cat oarepo/oarepo/version.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.db }}-artifacts4oarepo
          path: |
            oarepo/setup.py
            oarepo/setup.cfg
            oarepo/requirements.txt
            oarepo/requirements-tests.txt
            oarepo/oarepo/version.py
          retention-days: 1

  push_to_oarepo:
    runs-on: ubuntu-latest
    needs: start_and_test
    env:
      NEWTAG: ${{ needs.start_and_test.outputs.newtag }}
    steps:
      - name: Checkout oarepo/oarepo under ./oarepo
        uses: actions/checkout@v3
        with:
          repository: "oarepo/oarepo"
          ref: "rdm-11"
          token: "${{ secrets.INTEGRATION_TEST }}"
          path: "oarepo"

#      - name: Download artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: postgres-artifacts4oarepo
#          path: oarepo

      - name: debug
        run: |
          ls -l oarepo
          ls -l oarepo/oarepo
          ls -l oarepo/setup.py oarepo/setup.cfg oarepo/requirements.txt oarepo/requirements-tests.txt oarepo/oarepo/version.py
          echo -n "version:"
          cat oarepo/oarepo/version.py
          echo "newtag: ${{ env.NEWTAG }}"
          echo "event_name: ${{ github.event_name }}"

#      - name: Commit and Push generated OARepo setup.cfg and reqs
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: "[invenio-integration-tests] update setup.cfg and reqs (tag ${{ env.NEWTAG }})"
#          branch: rdm-11
#          file_pattern: setup.py setup.cfg requirements.txt requirements-tests.txt oarepo/version.py
#          repository: oarepo
#          commit_user_name: integration-tests
#          commit_user_email: integration-tests@oarepo.org
#          tagging_message: ${{ env.NEWTAG }}
#          # Optional options appended to `git-push`
#          push_options: '--force'
#        if: success() && ( github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
