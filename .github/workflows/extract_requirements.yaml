# -*- coding: utf-8 -*-
#
# Copyright (C) 2024 CESNET.
#
# invenio-integration-tests is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

name: Extract requirements from Invenio RDM

on:
  workflow_call:
    inputs:
      oarepo:
        description: OARepo version (12, ...)
        required: true
        default: "12"
        type: string
      python:
        description: Python version
        required: true
        default: "3.12"
        type: string

env:
  # keep the following consistent
  OAREPO_VERSION: ${{ inputs.oarepo }}
  PYTHON_VERSION: ${{ inputs.python }}

jobs:
  set_environment_variables:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variables
        run: |
          echo "OAREPO_VERSION=${OAREPO_VERSION}" | tee -a $GITHUB_ENV
          OAREPO_VERSION_INC=$((OAREPO_VERSION + 1))

          echo "OAREPO_VERSION_INC=${OAREPO_VERSION_INC}" | tee -a $GITHUB_ENV
          echo "PYTHON=python${PYTHON_VERSION}" | tee -a $GITHUB_ENV

          # take at least beta development versions of invenio-app-rdm
          echo "APP_RDM_PRODUCTION_VERSION=invenio-app-rdm[opensearch2,s3]>=${OAREPO_VERSION}.0.0b1.dev1,<${OAREPO_VERSION_INC}"  | tee -a $GITHUB_ENV
          echo "APP_RDM_TEST_VERSION=invenio-app-rdm[opensearch2,s3,tests]>=${OAREPO_VERSION}.0.0b1.dev1,<${OAREPO_VERSION_INC}"  | tee -a $GITHUB_ENV

          echo "OPENSEARCH_PORT=9200" | tee -a $GITHUB_ENV
          echo "OPENSEARCH_VERSION=2" | tee -a $GITHUB_ENV
          echo "REDIS_VERSION=6" | tee -a $GITHUB_ENV
          echo "POSTGRES_VERSION=14" | tee -a $GITHUB_ENV
          echo "POSTGRES_DB=invenio" | tee -a $GITHUB_ENV

      - name: Checkout oarepo/invenio-integration-tests
        uses: actions/checkout@v4

      - name: Install python
        uses: ./.github/actions/install_python      # TODO: change the branch when merging to main
        with:
          python-version: ${{ inputs.python }}

      - name: Create artifacts directory
        run: |
          mkdir -p artifacts

      - name: Lock app-rdm version
        run: |
          uv init rdm --python $PYTHON_VERSION
          cd rdm
          uv add "$APP_RDM_PRODUCTION_VERSION"
          uv pip list  >../artifacts/rdm_requirements.txt
          uv pip list --format=json >../artifacts/rdm_requirements.json

      - name: Lock app-rdm + tests version
        run: |
          uv init rdm_tests --python $PYTHON_VERSION
          cd rdm_tests
          uv add "$APP_RDM_TEST_VERSION"
          uv pip list  >../artifacts/rdm_test_requirements.txt
          uv pip list --format=json >../artifacts/rdm_test_requirements.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rdm_versions
          path: artifacts
          if-no-files-found: error

      - name: Display Requirements
        run: |
          echo "========= RDM Requirements ========="
          cat artifacts/rdm_requirements.txt
          echo
          echo
          echo "========= RDM Test Requirements ========="
          cat artifacts/rdm_test_requirements.txt