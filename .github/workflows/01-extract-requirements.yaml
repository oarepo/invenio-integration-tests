# -*- coding: utf-8 -*-
#
# Copyright (C) 2024 CESNET.
#
# invenio-integration-tests is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

# note: in vscode, use YAML Embedded Languages for better support of embedded shell

name: Extract requirements from Invenio RDM

on:
  workflow_call:
    inputs:
      oarepo:
        description: OARepo version (12, ...)
        required: true
        default: "12"
        type: string
      python:
        description: Python version
        required: true
        default: "3.12"
        type: string

    outputs:
      forks_and_versions:
        description: "Invenio forks and their versions"
        value: ${{ jobs.main.outputs.forks_and_versions }}
    
env:
  # keep the following consistent
  OAREPO_VERSION: ${{ inputs.oarepo }}
  PYTHON_VERSION: ${{ inputs.python }}

jobs:
  main:
    runs-on: ubuntu-latest
    outputs:
      forks_and_versions: ${{ steps.get_fork_versions.outputs.forks_and_versions }}

    steps:
      - name: Checkout oarepo/invenio-integration-tests
        uses: actions/checkout@v4

      - name: Setup environment variables
        uses: ./.github/actions/setup_env
        with:
          python-version: ${{ inputs.python }}
          oarepo-version: ${{ inputs.oarepo }}

      - name: Install python and tools
        uses: ./.github/actions/install_python
        with:
          python-version: ${{ inputs.python }}

      - name: Create artifacts directory
        run: |
          mkdir -p artifacts/requirements

      - name: Install build tools
        uses: ./.github/actions/install_build_tools

      - name: Convert invenio-forks.yaml into json as some tools are run in invenio venv and do not have yaml
        run: |  # shell
          build_tools/.venv/bin/python \
              build_tools/src/build_tools/convert_forks_to_json.py \
              invenio-forks.yaml >invenio-forks-temp.json

      - name: Lock app-rdm version
        run: |  # shell
          # initialize rdm project with the given python. This will create a rdm/.venv directory
          uv init rdm --python $PYTHON_VERSION
          cd rdm

          # add the invenio-app-rdm with the given version and lock it
          uv add "$APP_RDM_PRODUCTION_VERSION"
          cat pyproject.toml

      - name: Select forks and patches
        # go through the virtualenv and the forks file and select the forks that are needed
        # this will create another json file with the same format but all the elements
        # that are not needed will be removed
        run: |  # shell
          cd rdm
          source .venv/bin/activate
          python ../build_tools/src/build_tools/select_forks_by_venv.py ../invenio-forks-temp.json ../invenio-forks.json

      - name: Apply frozen packages
        run: |  # shell
          cd rdm
          source .venv/bin/activate
          python ../build_tools/src/build_tools/install_frozen_dependencies.py ../invenio-forks.json
          cp ../invenio-forks.json ../artifacts/requirements/invenio-forks.json

      - name: Save requirements
        run: |  # shell
          cd rdm
          uv pip freeze | sort -u >../artifacts/requirements/rdm_requirements.txt
          uv pip list --format=json >../artifacts/requirements/rdm_requirements.json
          cp uv.lock ../artifacts/requirements/rdm.uv.lock

      - name: Extract react dependencies
        run: |  # shell
          cd rdm
          source .venv/bin/activate
          python ../build_tools/src/build_tools/get_react_dependencies.py >../artifacts/requirements/react-dependencies.json

      - name: Lock app-rdm + tests version
        run: |  # shell
          uv init rdm_tests --python $PYTHON_VERSION
          cd rdm_tests
          uv add "$APP_RDM_TEST_VERSION"
          cat pyproject.toml

      - name: Apply frozen packages to tests
        run: |  # shell
          cd rdm
          source .venv/bin/activate
          python ../build_tools/src/build_tools/install_frozen_dependencies.py ../invenio-forks.json
  
      - name: Save testrequirements
        run: |  # shell
          cd rdm
          uv pip freeze | sort -u >../artifacts/requirements/rdm_test_requirements.txt
          uv pip list --format=json >../artifacts/requirements/rdm_test_requirements.json
          cp uv.lock ../artifacts/requirements/rdm_test.uv.lock

      - name: Check that the two requirements are compatible
        # , that is, that the test requirements are a superset of the requirements
        run: |  # shell
          echo "Diff between the requirements and test requirements"
          diff -u artifacts/requirements/rdm_requirements.txt artifacts/requirements/rdm_test_requirements.txt | egrep -v '^(---|[+][+][+])' | egrep "^(-|[+])" | tee test_changes.diff || true
          cat test_changes.diff | grep '^-' | while read ; do
            pkg=$(echo $REPLY | sed 's/^-\([^=]*\)==.*$/\1/')
            versions="$(cat test_changes.diff  | grep $pkg | tr '\n' ' ')"
            echo "::warning::RDM requirements and RDM test requirements are not compatible in package: $versions"
          done


      - id: get_fork_versions
        name: Get forks and their versions
        run: |  # shell
              mkdir -p artifacts/fork-versions
              build_tools/.venv/bin/bt_get_fork_versions \
                  invenio-forks.json \
                  --output-file artifacts/fork-versions/forks_and_versions.json
              # cat the file to github output variable
              echo "forks_and_versions=$(cat artifacts/fork-versions/forks_and_versions.json)" >> $GITHUB_OUTPUT
  
      - name: Upload fork versions
        uses: actions/upload-artifact@v4
        with:
          name: fork_versions
          path: artifacts/fork-versions

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rdm_versions
          path: artifacts/requirements
          if-no-files-found: error

      - name: Display Requirements
        run: |  # shell
          echo "========= RDM Requirements ========="
          cat artifacts/requirements/rdm_requirements.txt
          echo
          echo
          echo "========= RDM Test Requirements ========="
          cat artifacts/requirements/rdm_test_requirements.txt
          echo
          echo
          echo "========= React Dependencies ========="
          cat artifacts/requirements/react-dependencies.json
          echo
          echo
          echo "========= Invenio Forks Settings ========="
          cat invenio-forks.json